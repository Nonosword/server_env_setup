user www-data;

#usually equal to number of CPUs you have. run command "grep processor /proc/cpuinfo | wc -l" to find it
worker_processes auto;
worker_cpu_affinity auto;

error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;
# Keeps the logs free of messages about not being able to bind().
# daemon off;
# include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_names_hash_bucket_size 128;
    include /etc/nginx/mime.types;
    #php max upload limit cannot be larger than this
    client_max_body_size 10M;
    default_type application/octet-stream;
    include /etc/nginx/conf.d/*.conf;

    # Upstream to abstract backend connection(s) for PHP.
    #this should match value of "listen" directive in php-fpm pool
    upstream php-handler {
        server unix:/run/php/php-fpm.sock;
    }

    # include /etc/nginx/sites-enabled/*;
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;

        root /home/wwwroot/error_page;
        index untrusted_domain.html;

        location / {
            try_files $uri $uri/ =404;
        }
    }

    server {
        listen 80;
        listen [::]:80;
        server_name yourdomainname *.yourdomainname
        # Enforce HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
# xray_switch_start
        listen 8082;
        listen [::]:8082;
        listen 8083 http2;
        listen [::]:8083 http2;
# xray_switch_end
        server_name yourdomainname *.yourdomainname;
        ssl_certificate /usr/local/nginx/conf/ssl/yourdomainname/fullchain.cer;
        ssl_certificate_key /usr/local/nginx/conf/ssl/yourdomainname/yourdomainname.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        
        include /etc/nginx/location_config.conf;
    }
}
